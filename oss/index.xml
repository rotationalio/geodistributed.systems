<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Open Source on Geo-Distributed Systems</title><link>https://geodistributed.systems/oss/</link><description>Recent content in Open Source on Geo-Distributed Systems</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Wed, 29 Sep 2021 13:48:56 +0000</lastBuildDate><atom:link href="https://geodistributed.systems/oss/index.xml" rel="self" type="application/rss+xml"/><item><title>Honu</title><link>https://geodistributed.systems/oss/honu/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://geodistributed.systems/oss/honu/</guid><description>Anti-Entropy for Efficient Eventual Consistency Honu is a Golang library for embedded database replication. It uses anti-entropy to enable copies of data to synchronize using an eventual consistency model.</description></item><item><title>Concur</title><link>https://geodistributed.systems/oss/concur/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://geodistributed.systems/oss/concur/</guid><description>Consensus is Not One-Size-Fits-All One of the things we wanted to communicate with the Yellowbrick project is that there is no one “best” machine learning model, only a set of best practices for finding the best model for a given dataset. We believe the distributed systems community has a similar problem; everyone is looking for the golden consensus algorithm, but there’s no silver bullet. What makes sense for Google isn’t best for Facebook; what’s used at Twitter isn’t ideal for Netflix.</description></item></channel></rss>